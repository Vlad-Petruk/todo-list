(()=>{"use strict";const e=(e,t,n,d,o)=>({title:e,description:t,dueDate:n,priority:d,complite:o});let t=e("Open me...","i know how you feel... but keep going, just one step at a time","11/12/12","top");e("MyTodo2","sdfgsdg","11/12/12","top"),e("MyTodo3","sdfgsdg","11/12/12","top"),console.log(t);let n=((e,t)=>{const n=[];return{id:"newProj",title:"NewProj",todos:n,addTodo:e=>{n.push(e)},deleteTodo:e=>{let t=n.indexOf(e);n.splice(t,1)}}})();console.log(n);let d=[{id:"all",title:"All Todos",todos:[t]}];document.addEventListener("DOMContentLoaded",(function(){(()=>{const e=document.getElementById("navigation"),t=document.getElementById("content"),n=document.getElementById("modal"),o=document.getElementById("modal-content");function i(){e.innerHTML="",d.forEach((t=>{const n=document.createElement("div");n.classList.add("nav-element"),"completed"===t.id&&n.classList.add("project-separator"),n.textContent=t.title,n.addEventListener("click",(()=>c(t))),e.appendChild(n)}))}function c(e){t.innerHTML="";const d=document.createElement("div"),o=document.createElement("div");o.classList.add("section-title"),o.textContent=e.title,d.appendChild(o);const i=document.createElement("button");if(i.type="button",i.innerHTML="Add Todo",i.classList.add("add-todo-button"),d.appendChild(i),i.addEventListener("click",(()=>{n.style.display="block",s(),p()})),0===e.todos.length){const e=document.createElement("p");e.textContent="No todos for this section.",d.appendChild(e)}else e.todos.forEach(((e,t)=>{const n=document.createElement("div");n.classList.add("todo");const o=document.createElement("input");o.type="checkbox",o.checked=e.complete,o.addEventListener("change",(()=>{e.complete=o.checked,o.checked?i.classList.add("crossed-out"):i.classList.remove("crossed-out")}));const i=document.createElement("div");i.textContent=e.title,i.addEventListener("click",(()=>l(e))),n.appendChild(o),n.appendChild(i),d.appendChild(n)}));t.appendChild(d)}function l(e,t){o.innerHTML=`\n      <p>Todo Details:</p>\n      <p>Title: ${e.title}</p>\n      <p>Descrption: ${e.description||"No details available"}</p>\n      <p>Due date: ${e.dueDate}<p>\n      <p>Priorty: ${e.priority}\n      `,n.style.display="block",s(),p()}function s(){const e=document.createElement("div");e.className="close",e.innerHTML="&times;",e.addEventListener("click",(()=>a())),o.appendChild(e)}function a(){n.style.display="none",o.innerHTML=""}function p(){const e=document.createElement("button");e.textContent="Update",e.addEventListener("click",(()=>(index,void a()))),o.appendChild(e)}i(),c(d.find((e=>"all"===e.id)))})()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,