(()=>{"use strict";const e=(e,t,n,d,o)=>({title:e,description:t,dueDate:n,priority:d,complite:o});let t=e("Open me...","i know how you feel... but keep going, just one step at a time","11/12/12","top");e("MyTodo2","sdfgsdg","11/12/12","top"),e("MyTodo3","sdfgsdg","11/12/12","top"),console.log(t);let n=((e,t)=>{const n=[];return{id:"newProj",title:"NewProj",todos:n,addTodo:e=>{n.push(e)},deleteTodo:e=>{let t=n.indexOf(e);n.splice(t,1)}}})();console.log(n);let d=[{id:"all",title:"All Todos",todos:[t]}];document.addEventListener("DOMContentLoaded",(function(){(()=>{const t=document.getElementById("navigation"),n=document.getElementById("content"),o=document.getElementById("modal"),i=document.getElementById("modal-content");function c(){t.innerHTML="",d.forEach((e=>{const n=document.createElement("div");n.classList.add("nav-element"),"completed"===e.id&&n.classList.add("project-separator"),n.textContent=e.title,n.addEventListener("click",(()=>l(e))),t.appendChild(n)}))}function l(t){n.innerHTML="";const c=document.createElement("div"),r=document.createElement("div");r.classList.add("section-title"),r.textContent=t.title,c.appendChild(r);const u=document.createElement("button");if(u.type="button",u.innerHTML="Add Todo",u.classList.add("add-todo-button"),c.appendChild(u),u.addEventListener("click",(()=>{!function(){const t=document.createElement("h2");t.innerHTML="Create Todo",i.appendChild(t),o.style.display="block";const n=document.getElementById("todo-form"),c=document.getElementById("title"),s=document.getElementById("priority"),r=document.getElementById("dueDate"),u=document.getElementById("description"),E=document.getElementById("todo-submit");i.appendChild(n),E.addEventListener("click",(()=>{let t=e(c.value,u.value,r.value,s.value);console.log(t),d[0].todos.push(t),p(),l(d.find((e=>"all"===e.id)))})),a(),m()}()})),0===t.todos.length){const e=document.createElement("p");e.textContent="No todos for this section.",c.appendChild(e)}else t.todos.forEach(((e,t)=>{const n=document.createElement("div");n.classList.add("todo");const d=document.createElement("input");d.type="checkbox",d.checked=e.complete,d.addEventListener("change",(()=>{e.complete=d.checked,d.checked?o.classList.add("crossed-out"):o.classList.remove("crossed-out")}));const o=document.createElement("div");o.textContent=e.title,o.addEventListener("click",(()=>s(e))),n.appendChild(d),n.appendChild(o),c.appendChild(n)}));n.appendChild(c)}function s(e,t){i.innerHTML=`\n      <p>Todo Details:</p>\n      <p>Title: ${e.title}</p>\n      <p>Descrption: ${e.description||"No details available"}</p>\n      <p>Due date: ${e.dueDate}<p>\n      <p>Priorty: ${e.priority}\n      `,o.style.display="block",a(),m()}function a(){const e=document.createElement("div");e.className="close",e.innerHTML="&times;",e.addEventListener("click",(()=>p())),i.appendChild(e)}function p(){for(o.style.display="none";i.firstChild;)i.removeChild(i.firstChild)}function m(){const e=document.createElement("button");e.textContent="Update",e.addEventListener("click",(()=>(index,void p()))),i.appendChild(e)}c(),l(d.find((e=>"all"===e.id)))})()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoibUJBQUEsTUFzQk1BLEVBQWMsQ0FBQ0MsRUFBT0MsRUFBYUMsRUFBU0MsRUFBU0MsS0FHaEQsQ0FDSEosUUFDQUMsY0FDQUMsVUFDQUMsV0FDQUMsYUN6QlIsSUFBSUMsRUFBY04sRUFBWSxhQUFhLGlFQUFpRSxXQUFXLE9BQzNHQSxFQUFZLFVBQVUsVUFBVSxXQUFXLE9BQzNDQSxFQUFZLFVBQVUsVUFBVSxXQUFXLE9BQ3ZETyxRQUFRQyxJQUFJRixHQUVaLElBQUlHLEVEVm1CLEVBQUNDLEVBQUlULEtBQ3hCLE1BQU1VLEVBQVEsR0FZZCxNQUFPLENBQ0xELEdDSndCLFVES3hCVCxNQ0xrQyxVRE1sQ1UsUUFDQUMsUUFkZUMsSUFDZkYsRUFBTUcsS0FBS0QsRUFBSyxFQWNoQkUsV0FWa0JGLElBQ2xCLElBQUlHLEVBQVlMLEVBQU1NLFFBQVFKLEdBQzlCRixFQUFNTyxPQUFPRixFQUFVLEVBQUUsRUFTMUIsRUNUVUcsR0FLZFosUUFBUUMsSUFBSUMsR0FJYixJQUFJVyxFQUFXLENBQ2IsQ0FBRVYsR0FBSSxNQUFPVCxNQUFPLFlBQWFVLE1BQU8sQ0FBQ0wsS0NUM0NlLFNBQVNDLGlCQUFpQixvQkFBb0IsV0RrQjVCLE1BQ2QsTUFBTUMsRUFBYUYsU0FBU0csZUFBZSxjQUNyQ0MsRUFBVUosU0FBU0csZUFBZSxXQUNsQ0UsRUFBUUwsU0FBU0csZUFBZSxTQUNoQ0csRUFBZU4sU0FBU0csZUFBZSxpQkFHN0MsU0FBU0ksSUFDUEwsRUFBV00sVUFBWSxHQUN2QlQsRUFBU1UsU0FBUUMsSUFDZixNQUFNQyxFQUFPWCxTQUFTWSxjQUFjLE9BQ3BDRCxFQUFLRSxVQUFVQyxJQUFJLGVBQ0EsY0FBZkosRUFBUXJCLElBQ1ZzQixFQUFLRSxVQUFVQyxJQUFJLHFCQUVyQkgsRUFBS0ksWUFBY0wsRUFBUTlCLE1BQzNCK0IsRUFBS1YsaUJBQWlCLFNBQVMsSUFBTWUsRUFBWU4sS0FDakRSLEVBQVdlLFlBQVlOLEVBQUssR0FFaEMsQ0FHQSxTQUFTSyxFQUFZTixHQUVuQk4sRUFBUUksVUFBWSxHQUNwQixNQUFNVSxFQUFpQmxCLFNBQVNZLGNBQWMsT0FFeENPLEVBQWVuQixTQUFTWSxjQUFjLE9BQzVDTyxFQUFhTixVQUFVQyxJQUFJLGlCQUMzQkssRUFBYUosWUFBY0wsRUFBUTlCLE1BQ25Dc0MsRUFBZUQsWUFBWUUsR0FFM0IsTUFBTUMsRUFBZ0JwQixTQUFTWSxjQUFjLFVBVTdDLEdBVEFRLEVBQWNDLEtBQU0sU0FDcEJELEVBQWNaLFVBQVksV0FDMUJZLEVBQWNQLFVBQVVDLElBQUksbUJBQzVCSSxFQUFlRCxZQUFZRyxHQUMzQkEsRUFBY25CLGlCQUFpQixTQUFRLE1BMkN6QyxXQUNFLE1BQU1xQixFQUFhdEIsU0FBU1ksY0FBYyxNQUMxQ1UsRUFBV2QsVUFBWSxjQUN2QkYsRUFBYVcsWUFBWUssR0FFekJqQixFQUFNa0IsTUFBTUMsUUFBVSxRQUN0QixNQUFNQyxFQUFXekIsU0FBU0csZUFBZSxhQUNuQ3VCLEVBQVkxQixTQUFTRyxlQUFlLFNBQ3BDd0IsRUFBZTNCLFNBQVNHLGVBQWUsWUFDdkN5QixFQUFjNUIsU0FBU0csZUFBZSxXQUN0QzBCLEVBQWtCN0IsU0FBU0csZUFBZSxlQUMxQzJCLEVBQWdCOUIsU0FBU0csZUFBZSxlQUM5Q0csRUFBYVcsWUFBWVEsR0FFekJLLEVBQWM3QixpQkFBaUIsU0FBUyxLQUN0QyxJQUFJOEIsRUFBVXBELEVBQVkrQyxFQUFVTSxNQUFPSCxFQUFnQkcsTUFBT0osRUFBWUksTUFBTUwsRUFBYUssT0FDakc5QyxRQUFRQyxJQUFJNEMsR0FDWmhDLEVBQVMsR0FBR1QsTUFBTUcsS0FBS3NDLEdBQ3ZCRSxJQUlBakIsRUFBWWpCLEVBQVNtQyxNQUFLeEIsR0FBMEIsUUFBZkEsRUFBUXJCLEtBQWMsSUFHN0Q4QyxJQUNBQyxHQUNGLENBckVJQyxFQUFxQixJQUlNLElBQXpCM0IsRUFBUXBCLE1BQU1nRCxPQUFjLENBQzlCLE1BQU1DLEVBQWlCdkMsU0FBU1ksY0FBYyxLQUM5QzJCLEVBQWV4QixZQUFjLDZCQUM3QkcsRUFBZUQsWUFBWXNCLEVBQzdCLE1BRUU3QixFQUFRcEIsTUFBTW1CLFNBQVEsQ0FBQ2pCLEVBQU1nRCxLQUMzQixNQUFNQyxFQUFnQnpDLFNBQVNZLGNBQWMsT0FDN0M2QixFQUFjNUIsVUFBVUMsSUFBSSxRQUM1QixNQUFNNEIsRUFBVzFDLFNBQVNZLGNBQWMsU0FDeEM4QixFQUFTckIsS0FBTyxXQUNoQnFCLEVBQVNDLFFBQVVuRCxFQUFLb0QsU0FFeEJGLEVBQVN6QyxpQkFBaUIsVUFBVSxLQUNsQ1QsRUFBS29ELFNBQVdGLEVBQVNDLFFBRXJCRCxFQUFTQyxRQUNiRSxFQUFZaEMsVUFBVUMsSUFBSSxlQUV4QitCLEVBQVloQyxVQUFVaUMsT0FBTyxjQUMvQixJQUdGLE1BQU1ELEVBQWM3QyxTQUFTWSxjQUFjLE9BRTNDaUMsRUFBWTlCLFlBQWN2QixFQUFLWixNQUMvQmlFLEVBQVk1QyxpQkFBaUIsU0FBUyxJQUFNOEMsRUFBcUJ2RCxLQUVqRWlELEVBQWN4QixZQUFZeUIsR0FDMUJELEVBQWN4QixZQUFZNEIsR0FDMUIzQixFQUFlRCxZQUFZd0IsRUFBYSxJQUs1Q3JDLEVBQVFhLFlBQVlDLEVBQ3RCLENBK0JBLFNBQVM2QixFQUFxQnZELEVBQU1nRCxHQUNsQ2xDLEVBQWFFLFVBQVksaURBRWJoQixFQUFLWixtQ0FDQVksRUFBS1gsYUFBZSxrREFDdEJXLEVBQUtWLGlDQUNOVSxFQUFLVCxtQkFFbkJzQixFQUFNa0IsTUFBTUMsUUFBVSxRQUV0QlcsSUFDQUMsR0FDRixDQUVBLFNBQVNELElBRVAsTUFBTWEsRUFBY2hELFNBQVNZLGNBQWMsT0FDM0NvQyxFQUFZQyxVQUFZLFFBQ3hCRCxFQUFZeEMsVUFBWSxVQUd4QndDLEVBQVkvQyxpQkFBaUIsU0FBUyxJQUFNZ0MsTUFHNUMzQixFQUFhVyxZQUFZK0IsRUFDM0IsQ0FHQSxTQUFTZixJQUVQLElBREE1QixFQUFNa0IsTUFBTUMsUUFBVSxPQUNmbEIsRUFBYTRDLFlBQ2xCNUMsRUFBYTZDLFlBQVk3QyxFQUFhNEMsV0FFMUMsQ0FFQSxTQUFTZCxJQUVQLE1BQU1nQixFQUFZcEQsU0FBU1ksY0FBYyxVQUN6Q3dDLEVBQVVyQyxZQUFjLFNBQ3hCcUMsRUFBVW5ELGlCQUFpQixTQUFTLEtBQXdCdUMsV0FTNURQLE9BUkEzQixFQUFhVyxZQUFZbUMsRUFDM0IsQ0FzQkY3QyxJQUNBUyxFQUFZakIsRUFBU21DLE1BQUt4QixHQUEwQixRQUFmQSxFQUFRckIsS0FRN0MsRUN0TUVnRSxFQUVELEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvZmFjdG9yaWVzLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9VSS5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgUHJvamVjdEZhY3RvcnkgPSAoaWQsIHRpdGxlKSA9PiB7XHJcbiAgICBjb25zdCB0b2RvcyA9IFtdO1xyXG4gIFxyXG4gICAgY29uc3QgYWRkVG9kbyA9ICh0b2RvKSA9PiB7XHJcbiAgICAgIHRvZG9zLnB1c2godG9kbyk7XHJcbiAgICAvLyAgIHNhdmVUb0xvY2FsU3RvcmFnZSgpO1xyXG4gICAgfTtcclxuXHJcbiAgICBjb25zdCBkZWxldGVUb2RvID0gKHRvZG8pID0+IHtcclxuICAgICAgbGV0IHRvZG9JbmRleCA9IHRvZG9zLmluZGV4T2YodG9kbylcclxuICAgICAgdG9kb3Muc3BsaWNlKHRvZG9JbmRleCwxKTtcclxuICAgIH1cclxuICBcclxuICAgIHJldHVybiB7XHJcbiAgICAgIGlkLFxyXG4gICAgICB0aXRsZSxcclxuICAgICAgdG9kb3MsXHJcbiAgICAgIGFkZFRvZG8sXHJcbiAgICAgIGRlbGV0ZVRvZG8sXHJcbiAgICB9O1xyXG4gIH07XHJcblxyXG5jb25zdCBUb2RvRmFjdG9yeSA9ICh0aXRsZSwgZGVzY3JpcHRpb24sIGR1ZURhdGUsIHByaW9yaXR5LGNvbXBsaXRlKSA9PiB7XHJcbiAgY29tcGxpdGU6IGZhbHNlO1xyXG5cclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgdGl0bGUsXHJcbiAgICAgICAgZGVzY3JpcHRpb24sIFxyXG4gICAgICAgIGR1ZURhdGUsIFxyXG4gICAgICAgIHByaW9yaXR5LFxyXG4gICAgICAgIGNvbXBsaXRlXHJcbiAgICB9O1xyXG59XHJcblxyXG5cclxuXHJcbiBleHBvcnQge1Byb2plY3RGYWN0b3J5LCBUb2RvRmFjdG9yeX0iLCJpbXBvcnQgeyBUb2RvRmFjdG9yeSwgUHJvamVjdEZhY3RvcnkgfSBmcm9tIFwiLi9mYWN0b3JpZXNcIjtcclxuXHJcbi8vIE1heWJlIHRyeSB0byB3b3JrIHdpdGggdGhpcyBmdW5jdGlvbiBhbGwgdGhlIHdheSwgd2l0aCBzZWN0aW9ucyh0b2RheSx3ZWVrLCBtb250aCkgXHJcbi8vIG1heWJlIHRyZSB0byB1cGRhdGUgZnVuY3Rpb24gdG8gYmUgYWJsZSB0byBhZGQgdG9kb3MgYW5kIGNyZWF0ZSBhbmQgYWRkIHByb2plY3RzIGFzIHdlbGxcclxuXHJcbmxldCBkZWZhdWx0VG9kbyA9IFRvZG9GYWN0b3J5KCdPcGVuIG1lLi4uJywnaSBrbm93IGhvdyB5b3UgZmVlbC4uLiBidXQga2VlcCBnb2luZywganVzdCBvbmUgc3RlcCBhdCBhIHRpbWUnLCcxMS8xMi8xMicsJ3RvcCcsKTtcclxubGV0IHRvZG8yID0gVG9kb0ZhY3RvcnkoJ015VG9kbzInLCdzZGZnc2RnJywnMTEvMTIvMTInLCd0b3AnKTtcclxubGV0IHRvZG8zID0gVG9kb0ZhY3RvcnkoJ015VG9kbzMnLCdzZGZnc2RnJywnMTEvMTIvMTInLCd0b3AnKTtcclxuY29uc29sZS5sb2coZGVmYXVsdFRvZG8pXHJcblxyXG5sZXQgcHJvamVjdDIgPSBQcm9qZWN0RmFjdG9yeSgnbmV3UHJvaicsJ05ld1Byb2onKVxyXG4vLyAgcHJvamVjdDEuYWRkVG9kbyh0b2RvKTtcclxuLy8gIHByb2plY3QxLmFkZFRvZG8odG9kbzIpO1xyXG4vLyAgcHJvamVjdDEuYWRkVG9kbyh0b2RvMyk7XHJcblxyXG4gY29uc29sZS5sb2cocHJvamVjdDIpXHJcbiBcclxuXHJcbi8vIEluaXRpYWwgc2FtcGxlIGRhdGEgZm9yIG5hdmlnYXRpb24gaXRlbXMgYW5kIGNvcnJlc3BvbmRpbmcgY29udGVudFxyXG5sZXQgc2VjdGlvbnMgPSBbXHJcbiAgeyBpZDogJ2FsbCcsIHRpdGxlOiAnQWxsIFRvZG9zJywgdG9kb3M6IFtkZWZhdWx0VG9kb10gfSxcclxuICAvLyB7IGlkOiAndG9kYXknLCB0aXRsZTogJ1RvZGF5JywgdG9kb3M6IFtdIH0sXHJcbiAgLy8geyBpZDogJ3dlZWsnLCB0aXRsZTogJ1RoaXMgd2VlaycsIHRvZG9zOiBbXSB9LFxyXG4gIC8vIHsgaWQ6ICdpbXBvcnRhbnQnLCB0aXRsZTogJ0ltcG9ydGFudCcsIHRvZG9zOiBbXSB9LFxyXG4gIC8vIHsgaWQ6ICdjb21wbGV0ZWQnLCB0aXRsZTogJ0NvbXBsZXRlZCcsIHRvZG9zOiBbXSB9LFxyXG5dO1xyXG5cclxuLy8gc2VjdGlvbnMucHVzaChwcm9qZWN0MilcclxuXHJcbmNvbnN0IGRvbUxvYWRlciA9ICgpID0+e1xyXG4gICAgY29uc3QgbmF2aWdhdGlvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCduYXZpZ2F0aW9uJyk7XHJcbiAgICBjb25zdCBjb250ZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NvbnRlbnQnKTtcclxuICAgIGNvbnN0IG1vZGFsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21vZGFsJyk7XHJcbiAgICBjb25zdCBtb2RhbENvbnRlbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbW9kYWwtY29udGVudCcpO1xyXG5cclxuICAgIC8vIEZ1bmN0aW9uIHRvIHJlbmRlciBuYXZpZ2F0aW9uIGl0ZW1zXHJcbiAgICBmdW5jdGlvbiByZW5kZXJOYXZpZ2F0aW9uKCkge1xyXG4gICAgICBuYXZpZ2F0aW9uLmlubmVySFRNTCA9ICcnO1xyXG4gICAgICBzZWN0aW9ucy5mb3JFYWNoKHNlY3Rpb24gPT4ge1xyXG4gICAgICAgIGNvbnN0IGl0ZW0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgICBpdGVtLmNsYXNzTGlzdC5hZGQoJ25hdi1lbGVtZW50JylcclxuICAgICAgICBpZiAoc2VjdGlvbi5pZCA9PT0gJ2NvbXBsZXRlZCcpe1xyXG4gICAgICAgICAgaXRlbS5jbGFzc0xpc3QuYWRkKCdwcm9qZWN0LXNlcGFyYXRvcicpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpdGVtLnRleHRDb250ZW50ID0gc2VjdGlvbi50aXRsZTtcclxuICAgICAgICBpdGVtLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gc2hvd0NvbnRlbnQoc2VjdGlvbikpO1xyXG4gICAgICAgIG5hdmlnYXRpb24uYXBwZW5kQ2hpbGQoaXRlbSk7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIFxyXG4gICAgLy8gRnVuY3Rpb24gdG8gc2hvdyBjb250ZW50IGZvciBhIHNlbGVjdGVkIHNlY3Rpb25cclxuICAgIGZ1bmN0aW9uIHNob3dDb250ZW50KHNlY3Rpb24pIHtcclxuXHJcbiAgICAgIGNvbnRlbnQuaW5uZXJIVE1MID0gJyc7XHJcbiAgICAgIGNvbnN0IGNvbnRlbnRFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICAgIC8vIFRpdGxlXHJcbiAgICAgIGNvbnN0IHNlY3Rpb25UaXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgICBzZWN0aW9uVGl0bGUuY2xhc3NMaXN0LmFkZCgnc2VjdGlvbi10aXRsZScpXHJcbiAgICAgIHNlY3Rpb25UaXRsZS50ZXh0Q29udGVudCA9IHNlY3Rpb24udGl0bGU7XHJcbiAgICAgIGNvbnRlbnRFbGVtZW50LmFwcGVuZENoaWxkKHNlY3Rpb25UaXRsZSk7XHJcbiAgICAgIC8vQnV0dG9uIFxyXG4gICAgICBjb25zdCBhZGRUb2RvQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XHJcbiAgICAgIGFkZFRvZG9CdXR0b24udHlwZT0gJ2J1dHRvbic7XHJcbiAgICAgIGFkZFRvZG9CdXR0b24uaW5uZXJIVE1MID0gXCJBZGQgVG9kb1wiO1xyXG4gICAgICBhZGRUb2RvQnV0dG9uLmNsYXNzTGlzdC5hZGQoJ2FkZC10b2RvLWJ1dHRvbicpXHJcbiAgICAgIGNvbnRlbnRFbGVtZW50LmFwcGVuZENoaWxkKGFkZFRvZG9CdXR0b24pO1xyXG4gICAgICBhZGRUb2RvQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywoKT0+e1xyXG4gICAgICAgIG9wZW5Ub2RvQ3JlYXRlTW9kYWwoKTtcclxuICAgICAgfSlcclxuXHJcbiAgICAgIC8vIENoZWNrIGlmIHRoZXJlIGlzIGNvbnRlbnQgaW4gdGhlIHNlY3Rpb25cclxuICAgICAgaWYgKHNlY3Rpb24udG9kb3MubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgY29uc3Qgbm9Ub2Rvc01lc3NhZ2UgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XHJcbiAgICAgICAgbm9Ub2Rvc01lc3NhZ2UudGV4dENvbnRlbnQgPSAnTm8gdG9kb3MgZm9yIHRoaXMgc2VjdGlvbi4nO1xyXG4gICAgICAgIGNvbnRlbnRFbGVtZW50LmFwcGVuZENoaWxkKG5vVG9kb3NNZXNzYWdlKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICAvLyBJdGVyYXRlIG92ZXIgdGhlIGFycmF5IGFuZCBjcmVhdGUgZWxlbWVudHMgZm9yIGVhY2ggdG9kbyBpdGVtXHJcbiAgICAgICAgc2VjdGlvbi50b2Rvcy5mb3JFYWNoKCh0b2RvLCBpbmRleCkgPT4ge1xyXG4gICAgICAgICAgY29uc3QgdG9kb0NvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgICAgICAgdG9kb0NvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCd0b2RvJylcclxuICAgICAgICAgIGNvbnN0IGNoZWNrYm94ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcclxuICAgICAgICAgIGNoZWNrYm94LnR5cGUgPSAnY2hlY2tib3gnO1xyXG4gICAgICAgICAgY2hlY2tib3guY2hlY2tlZCA9IHRvZG8uY29tcGxldGU7XHJcblxyXG4gICAgICAgICAgY2hlY2tib3guYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKCkgPT4ge1xyXG4gICAgICAgICAgICB0b2RvLmNvbXBsZXRlID0gY2hlY2tib3guY2hlY2tlZDtcclxuICAgICAgICAgICAgLy8gWW91IGNhbiBhZGQgYWRkaXRpb25hbCBsb2dpYyBoZXJlLCBzdWNoIGFzIHVwZGF0aW5nIHRoZSBVSSBvciBzYXZpbmcgdG8gc3RvcmFnZVxyXG4gICAgICAgICAgICBpZiAoY2hlY2tib3guY2hlY2tlZCl7XHJcbiAgICAgICAgICAgIHRvZG9FbGVtZW50LmNsYXNzTGlzdC5hZGQoJ2Nyb3NzZWQtb3V0Jyk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgdG9kb0VsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgnY3Jvc3NlZC1vdXQnKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgICBcclxuICAgICAgICAgIGNvbnN0IHRvZG9FbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICAgICAgICBcclxuICAgICAgICAgIHRvZG9FbGVtZW50LnRleHRDb250ZW50ID0gdG9kby50aXRsZTsgXHJcbiAgICAgICAgICB0b2RvRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IG9wZW5Ub2RvRGV0YWlsc01vZGFsKHRvZG8sIGluZGV4KSk7XHJcblxyXG4gICAgICAgICAgdG9kb0NvbnRhaW5lci5hcHBlbmRDaGlsZChjaGVja2JveCk7XHJcbiAgICAgICAgICB0b2RvQ29udGFpbmVyLmFwcGVuZENoaWxkKHRvZG9FbGVtZW50KTtcclxuICAgICAgICAgIGNvbnRlbnRFbGVtZW50LmFwcGVuZENoaWxkKHRvZG9Db250YWluZXIpXHJcbiAgICAgICAgICBcclxuICAgICAgICB9KTtcclxuICAgICAgfVxyXG4gIFxyXG4gICAgICBjb250ZW50LmFwcGVuZENoaWxkKGNvbnRlbnRFbGVtZW50KTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBvcGVuVG9kb0NyZWF0ZU1vZGFsKCl7XHJcbiAgICAgIGNvbnN0IG1vZGFsVGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoMicpO1xyXG4gICAgICBtb2RhbFRpdGxlLmlubmVySFRNTCA9ICdDcmVhdGUgVG9kbyc7XHJcbiAgICAgIG1vZGFsQ29udGVudC5hcHBlbmRDaGlsZChtb2RhbFRpdGxlKTtcclxuICAgICAgLy8gSGVyZSBzaG91bGQgYmUgZm9ybSBlbGVtZW50IHdpdGggc3VibWl0QWxsIGJ1dHRvblxyXG4gICAgICBtb2RhbC5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcclxuICAgICAgY29uc3QgdG9kb0Zvcm0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndG9kby1mb3JtJyk7XHJcbiAgICAgIGNvbnN0IHRvZG9UaXRsZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0aXRsZScpO1xyXG4gICAgICBjb25zdCB0b2RvUHJpb3JpdHkgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncHJpb3JpdHknKTtcclxuICAgICAgY29uc3QgdG9kb0R1ZURhdGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZHVlRGF0ZScpO1xyXG4gICAgICBjb25zdCB0b2RvRGVzY3JpcHRpb24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZGVzY3JpcHRpb24nKTtcclxuICAgICAgY29uc3QgdG9kb1N1Ym1pdEJ0biA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0b2RvLXN1Ym1pdCcpXHJcbiAgICAgIG1vZGFsQ29udGVudC5hcHBlbmRDaGlsZCh0b2RvRm9ybSk7XHJcbiAgICBcclxuICAgICAgdG9kb1N1Ym1pdEJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpPT57XHJcbiAgICAgICAgbGV0IG5ld1RvZG8gPSBUb2RvRmFjdG9yeSh0b2RvVGl0bGUudmFsdWUsIHRvZG9EZXNjcmlwdGlvbi52YWx1ZSwgdG9kb0R1ZURhdGUudmFsdWUsdG9kb1ByaW9yaXR5LnZhbHVlKTtcclxuICAgICAgICBjb25zb2xlLmxvZyhuZXdUb2RvKTtcclxuICAgICAgICBzZWN0aW9uc1swXS50b2Rvcy5wdXNoKG5ld1RvZG8pO1xyXG4gICAgICAgIGNsb3NlTW9kYWwoKTtcclxuICAgICAgICAvLyB3aGlsZSAobW9kYWxDb250ZW50LmZpcnN0Q2hpbGQpIHtcclxuICAgICAgICAvLyAgIG1vZGFsQ29udGVudC5yZW1vdmVDaGlsZChtb2RhbENvbnRlbnQuZmlyc3RDaGlsZCk7XHJcbiAgICAgICAgLy8gfVxyXG4gICAgICAgIHNob3dDb250ZW50KHNlY3Rpb25zLmZpbmQoc2VjdGlvbiA9PiBzZWN0aW9uLmlkID09PSAnYWxsJykpO1xyXG4gICAgICB9KVxyXG5cclxuICAgICAgY3JlYXRlQ2xvc2VNb2RhbEJ0bigpO1xyXG4gICAgICBjcmVhdGVVcGRhdGVNb2RhbEJ0bigpO1xyXG4gICAgfVxyXG4gICAgLy8gRnVuY3Rpb24gdG8gb3BlbiBtb2RhbCB3aXRoIHRvZG8gZGV0YWlsc1xyXG4gICAgZnVuY3Rpb24gb3BlblRvZG9EZXRhaWxzTW9kYWwodG9kbywgaW5kZXgpIHtcclxuICAgICAgbW9kYWxDb250ZW50LmlubmVySFRNTCA9IGBcclxuICAgICAgPHA+VG9kbyBEZXRhaWxzOjwvcD5cclxuICAgICAgPHA+VGl0bGU6ICR7dG9kby50aXRsZX08L3A+XHJcbiAgICAgIDxwPkRlc2NycHRpb246ICR7dG9kby5kZXNjcmlwdGlvbiB8fCAnTm8gZGV0YWlscyBhdmFpbGFibGUnfTwvcD5cclxuICAgICAgPHA+RHVlIGRhdGU6ICR7dG9kby5kdWVEYXRlfTxwPlxyXG4gICAgICA8cD5QcmlvcnR5OiAke3RvZG8ucHJpb3JpdHl9XHJcbiAgICAgIGA7XHJcbiAgICAgIG1vZGFsLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xyXG4gIFxyXG4gICAgICBjcmVhdGVDbG9zZU1vZGFsQnRuKCk7XHJcbiAgICAgIGNyZWF0ZVVwZGF0ZU1vZGFsQnRuKCk7XHJcbiAgICB9XHJcbiAgXHJcbiAgICBmdW5jdGlvbiBjcmVhdGVDbG9zZU1vZGFsQnRuKCl7XHJcbiAgICAgIC8vIENsb3NlIG1vZGFsIHdoZW4gdGhlIGNsb3NlIGJ1dHRvbiBpcyBjbGlja2VkXHJcbiAgICAgIGNvbnN0IGNsb3NlQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICAgIGNsb3NlQnV0dG9uLmNsYXNzTmFtZSA9ICdjbG9zZSc7XHJcbiAgICAgIGNsb3NlQnV0dG9uLmlubmVySFRNTCA9ICcmdGltZXM7JztcclxuXHJcbiAgICAgIC8vIEF0dGFjaCB0aGUgZXZlbnQgbGlzdGVuZXIgdG8gY2xvc2UgdGhlIG1vZGFsXHJcbiAgICAgIGNsb3NlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gY2xvc2VNb2RhbCgpKTtcclxuXHJcbiAgICAgIC8vIEFwcGVuZCB0aGUgY2xvc2UgYnV0dG9uIHRvIHRoZSBtb2RhbCBjb250ZW50XHJcbiAgICAgIG1vZGFsQ29udGVudC5hcHBlbmRDaGlsZChjbG9zZUJ1dHRvbik7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gRnVuY3Rpb24gdG8gY2xvc2UgdGhlIG1vZGFsXHJcbiAgICBmdW5jdGlvbiBjbG9zZU1vZGFsKCkge1xyXG4gICAgICBtb2RhbC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG4gICAgICB3aGlsZSAobW9kYWxDb250ZW50LmZpcnN0Q2hpbGQpIHtcclxuICAgICAgICBtb2RhbENvbnRlbnQucmVtb3ZlQ2hpbGQobW9kYWxDb250ZW50LmZpcnN0Q2hpbGQpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgXHJcbiAgICBmdW5jdGlvbiBjcmVhdGVVcGRhdGVNb2RhbEJ0biAoKXtcclxuICAgICAgLy8gT3B0aW9uYWw6IEFkZCBmdW5jdGlvbmFsaXR5IHRvIHVwZGF0ZSBvciBkZWxldGUgdG9kbyBpbiB0aGUgbW9kYWxcclxuICAgICAgY29uc3QgdXBkYXRlQnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XHJcbiAgICAgIHVwZGF0ZUJ0bi50ZXh0Q29udGVudCA9ICdVcGRhdGUnO1xyXG4gICAgICB1cGRhdGVCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB1cGRhdGVUb2RvRGV0YWlscyhpbmRleCkpO1xyXG4gICAgICBtb2RhbENvbnRlbnQuYXBwZW5kQ2hpbGQodXBkYXRlQnRuKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBGdW5jdGlvbiB0byB1cGRhdGUgdG9kbyBkZXRhaWxzIChvcHRpb25hbClcclxuICAgIGZ1bmN0aW9uIHVwZGF0ZVRvZG9EZXRhaWxzKGluZGV4KSB7XHJcbiAgICAgIC8vIEFkZCB5b3VyIGxvZ2ljIHRvIHVwZGF0ZSB0b2RvIGRldGFpbHNcclxuICAgICAgLy8gWW91IGNhbiB1c2UgcHJvbXB0LCBpbnB1dCBmaWVsZHMsIG9yIGFub3RoZXIgbW9kYWwgZm9yIHVwZGF0aW5nXHJcbiAgICAgIC8vIFRoZW4gdXBkYXRlIHRoZSBzZWN0aW9ucyBhcnJheSBhbmQgY2xvc2UgdGhlIG1vZGFsXHJcbiAgICAgIGNsb3NlTW9kYWwoKTtcclxuICAgIH1cclxuICBcclxuICAgIFxyXG4gICAgXHJcbiAgICBmdW5jdGlvbiBwb3B1bGF0ZVNlY3Rpb24oc2VjdGlvbklkLCBwcm9qZWN0LCB0b2RvKSB7XHJcbiAgICBwcm9qZWN0LmFkZFRvZG8odG9kbylcclxuICAgIHNlY3Rpb25zLmZpbmQoc2VjdGlvbiA9PiBzZWN0aW9uLmlkID09PSBzZWN0aW9uSWQpLnRvZG9zID0gcHJvamVjdC50b2RvcztcclxuICBcclxuICAgIC8vIFJlZnJlc2ggdGhlIG5hdmlnYXRpb24gYW5kIGNvbnRlbnQgdG8gc2VlIHRoZSBjaGFuZ2VzXHJcbiAgICByZW5kZXJOYXZpZ2F0aW9uKCk7XHJcbiAgICBzaG93Q29udGVudChzZWN0aW9ucy5maW5kKHNlY3Rpb24gPT4gc2VjdGlvbi5pZCA9PT0gc2VjdGlvbklkKSk7XHJcbiAgfVxyXG4gIFxyXG5cclxuICByZW5kZXJOYXZpZ2F0aW9uKCk7XHJcbiAgc2hvd0NvbnRlbnQoc2VjdGlvbnMuZmluZChzZWN0aW9uID0+IHNlY3Rpb24uaWQgPT09ICdhbGwnKSk7XHJcblxyXG4gIHJldHVybntcclxuICAgIHJlbmRlck5hdmlnYXRpb24sXHJcbiAgICBzaG93Q29udGVudCxcclxuICAgIG9wZW5Ub2RvRGV0YWlsc01vZGFsLFxyXG4gICAgY2xvc2VNb2RhbCxcclxuICAgIHBvcHVsYXRlU2VjdGlvblxyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IHtcclxuICBkb21Mb2FkZXIsXHJcbiAgc2VjdGlvbnMsXHJcbn0iLCJpbXBvcnQgeyBUb2RvRmFjdG9yeSwgUHJvamVjdEZhY3RvcnkgfSBmcm9tIFwiLi9mYWN0b3JpZXNcIjtcclxuaW1wb3J0IHsgZG9tTG9hZGVyLHNlY3Rpb25zLHJlbmRlck5hdmlnYXRpb24gfSBmcm9tIFwiLi9VSVwiO1xyXG5cclxuLy8gaSBuZWVkIHRvIHdocml0ZSBsb2NhbCBzdG9yYWdlIGZ1bmN0aW9ucywgcGVnaGFwcyBpbiBkaWZmZXJlbnQgbW9kdWxlXHJcbi8vIGFkZCBkYXRlLWZuc1xyXG4vLyBjcmVhdGUgb3IgZmluZCB0aGUgVUk6IFxyXG4vLyBleHBhbmQgdGhlIGZhY3RvcmllcyB3aXRoIHRoZSBsb2NhbCBzdG9yYWdlIGZ1bmN0aW9ucyhkZWxldGUsYWRkLGdldClcclxuLy8gY3JlYXRlIG9ubG9hZCBmdW5jdGlvbiB3aXRoIGFsbCBnZXQgZnJvbSBsb2NhbCBzdG9yYWdlXHJcbi8vIGxlYXJuIGhvdyB0byBleHBhbmQgdG9kbyB0byBzZWUvZWRpdCBpdHMgZGV0YWlsc1xyXG4vLyB2aWV3IGFsbCB0b2RvcyBpbiBlYWNoIHByb2plY3QgKHByb2JhYmx5IGp1c3QgdGhlIHRpdGxlIGFuZCBkdWVkYXRl4oCmIHBlcmhhcHMgY2hhbmdpbmcgY29sb3IgZm9yIGRpZmZlcmVudCBwcmlvcml0aWVzKVxyXG5cclxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIGZ1bmN0aW9uICgpIHtcclxuICAgIGRvbUxvYWRlcigpO1xyXG4gICAgLy8gcmVuZGVyTmF2aWdhdGlvbigpXHJcbiAgIH0pO1xyXG4gIFxyXG4gICAiXSwibmFtZXMiOlsiVG9kb0ZhY3RvcnkiLCJ0aXRsZSIsImRlc2NyaXB0aW9uIiwiZHVlRGF0ZSIsInByaW9yaXR5IiwiY29tcGxpdGUiLCJkZWZhdWx0VG9kbyIsImNvbnNvbGUiLCJsb2ciLCJwcm9qZWN0MiIsImlkIiwidG9kb3MiLCJhZGRUb2RvIiwidG9kbyIsInB1c2giLCJkZWxldGVUb2RvIiwidG9kb0luZGV4IiwiaW5kZXhPZiIsInNwbGljZSIsIlByb2plY3RGYWN0b3J5Iiwic2VjdGlvbnMiLCJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJuYXZpZ2F0aW9uIiwiZ2V0RWxlbWVudEJ5SWQiLCJjb250ZW50IiwibW9kYWwiLCJtb2RhbENvbnRlbnQiLCJyZW5kZXJOYXZpZ2F0aW9uIiwiaW5uZXJIVE1MIiwiZm9yRWFjaCIsInNlY3Rpb24iLCJpdGVtIiwiY3JlYXRlRWxlbWVudCIsImNsYXNzTGlzdCIsImFkZCIsInRleHRDb250ZW50Iiwic2hvd0NvbnRlbnQiLCJhcHBlbmRDaGlsZCIsImNvbnRlbnRFbGVtZW50Iiwic2VjdGlvblRpdGxlIiwiYWRkVG9kb0J1dHRvbiIsInR5cGUiLCJtb2RhbFRpdGxlIiwic3R5bGUiLCJkaXNwbGF5IiwidG9kb0Zvcm0iLCJ0b2RvVGl0bGUiLCJ0b2RvUHJpb3JpdHkiLCJ0b2RvRHVlRGF0ZSIsInRvZG9EZXNjcmlwdGlvbiIsInRvZG9TdWJtaXRCdG4iLCJuZXdUb2RvIiwidmFsdWUiLCJjbG9zZU1vZGFsIiwiZmluZCIsImNyZWF0ZUNsb3NlTW9kYWxCdG4iLCJjcmVhdGVVcGRhdGVNb2RhbEJ0biIsIm9wZW5Ub2RvQ3JlYXRlTW9kYWwiLCJsZW5ndGgiLCJub1RvZG9zTWVzc2FnZSIsImluZGV4IiwidG9kb0NvbnRhaW5lciIsImNoZWNrYm94IiwiY2hlY2tlZCIsImNvbXBsZXRlIiwidG9kb0VsZW1lbnQiLCJyZW1vdmUiLCJvcGVuVG9kb0RldGFpbHNNb2RhbCIsImNsb3NlQnV0dG9uIiwiY2xhc3NOYW1lIiwiZmlyc3RDaGlsZCIsInJlbW92ZUNoaWxkIiwidXBkYXRlQnRuIiwiZG9tTG9hZGVyIl0sInNvdXJjZVJvb3QiOiIifQ==