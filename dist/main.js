(()=>{"use strict";const t=(t,e,o,n)=>({title:t,description:e,dueDate:o,priority:n});let e=t("MyTodo","sdfgsdg","11/12/12","top"),o=t("MyTodo2","sdfgsdg","11/12/12","top"),n=t("MyTodo3","sdfgsdg","11/12/12","top");console.log(e);let d=(t=>{const e=[];return{projectTitle:"NewProj",todos:e,addTodo:t=>{e.push(t)},deleteTodo:t=>{let o=e.indexOf(t);e.splice(o,1)}}})();d.addTodo(e),d.addTodo(o),d.addTodo(n),d.deleteTodo(n),console.log(d),document.addEventListener("DOMContentLoaded",(function(){(()=>{const t=document.getElementById("navigation"),e=document.getElementById("content");[{id:"section1",title:"Section 1",content:"Content for Section 1"},{id:"section2",title:"Section 2",content:"Content for Section 2"}].forEach((o=>{const n=document.createElement("div");n.textContent=o.title,n.addEventListener("click",(()=>function(t){e.innerHTML="";const o=document.createElement("div");o.textContent=t.content,e.appendChild(o)}(o))),t.appendChild(n)}))})()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoibUJBQUEsTUFxQk1BLEVBQWMsQ0FBQ0MsRUFBT0MsRUFBYUMsRUFBU0MsS0FHdkMsQ0FDSEgsUUFDQUMsY0FDQUMsVUFDQUMsYUFJUixJQUFJQyxFQUFPTCxFQUFZLFNBQVMsVUFBVSxXQUFXLE9BQ2pETSxFQUFRTixFQUFZLFVBQVUsVUFBVSxXQUFXLE9BQ25ETyxFQUFRUCxFQUFZLFVBQVUsVUFBVSxXQUFXLE9BQ3ZEUSxRQUFRQyxJQUFJSixHQUVaLElBQUlLLEVBckNtQixDQUFDQyxJQUNwQixNQUFNQyxFQUFRLEdBWWQsTUFBTyxDQUNMRCxhQXVCdUIsVUF0QnZCQyxRQUNBQyxRQWJlUixJQUNmTyxFQUFNRSxLQUFLVCxFQUFLLEVBYWhCVSxXQVRrQlYsSUFDbEIsSUFBSVcsRUFBWUosRUFBTUssUUFBUVosR0FDOUJPLEVBQU1NLE9BQU9GLEVBQVUsRUFBRSxFQVExQixFQW1CU0csR0FDYlQsRUFBUUcsUUFBUVIsR0FDaEJLLEVBQVFHLFFBQVFQLEdBQ2hCSSxFQUFRRyxRQUFRTixHQUVoQkcsRUFBUUssV0FBV1IsR0FDbkJDLFFBQVFDLElBQUlDLEdDaENiVSxTQUFTQyxpQkFBaUIsb0JBQW9CLFdDVDVCLE1BQ2QsTUFBTUMsRUFBYUYsU0FBU0csZUFBZSxjQUNyQ0MsRUFBVUosU0FBU0csZUFBZSxXQUd2QixDQUNmLENBQUVFLEdBQUksV0FBWXhCLE1BQU8sWUFBYXVCLFFBQVMseUJBQy9DLENBQUVDLEdBQUksV0FBWXhCLE1BQU8sWUFBYXVCLFFBQVMsMEJBS3RDRSxTQUFRQyxJQUNmLE1BQU1DLEVBQU9SLFNBQVNTLGNBQWMsT0FDcENELEVBQUtFLFlBQWNILEVBQVExQixNQUMzQjJCLEVBQUtQLGlCQUFpQixTQUFTLElBS25DLFNBQXFCTSxHQUVuQkgsRUFBUU8sVUFBWSxHQUVwQixNQUFNQyxFQUFpQlosU0FBU1MsY0FBYyxPQUM5Q0csRUFBZUYsWUFBY0gsRUFBUUgsUUFDckNBLEVBQVFTLFlBQVlELEVBQ3RCLENBWnlDRSxDQUFZUCxLQUNqREwsRUFBV1csWUFBWUwsRUFBSyxHQW9CaEMsRUQxQkFPLEVBQ0QsRyIsInNvdXJjZXMiOlsid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9mYWN0b3JpZXMuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL2luZGV4LmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9VSS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBQcm9qZWN0RmFjdG9yeSA9IChwcm9qZWN0VGl0bGUpID0+IHtcclxuICAgIGNvbnN0IHRvZG9zID0gW107XHJcbiAgXHJcbiAgICBjb25zdCBhZGRUb2RvID0gKHRvZG8pID0+IHtcclxuICAgICAgdG9kb3MucHVzaCh0b2RvKTtcclxuICAgIC8vICAgc2F2ZVRvTG9jYWxTdG9yYWdlKCk7XHJcbiAgICB9O1xyXG5cclxuICAgIGNvbnN0IGRlbGV0ZVRvZG8gPSAodG9kbykgPT4ge1xyXG4gICAgICBsZXQgdG9kb0luZGV4ID0gdG9kb3MuaW5kZXhPZih0b2RvKVxyXG4gICAgICB0b2Rvcy5zcGxpY2UodG9kb0luZGV4LDEpO1xyXG4gICAgfVxyXG4gIFxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgcHJvamVjdFRpdGxlLFxyXG4gICAgICB0b2RvcyxcclxuICAgICAgYWRkVG9kbyxcclxuICAgICAgZGVsZXRlVG9kbyxcclxuICAgIH07XHJcbiAgfTtcclxuXHJcbmNvbnN0IFRvZG9GYWN0b3J5ID0gKHRpdGxlLCBkZXNjcmlwdGlvbiwgZHVlRGF0ZSwgcHJpb3JpdHkpID0+IHtcclxuXHJcblxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICB0aXRsZSxcclxuICAgICAgICBkZXNjcmlwdGlvbiwgXHJcbiAgICAgICAgZHVlRGF0ZSwgXHJcbiAgICAgICAgcHJpb3JpdHlcclxuICAgIH07XHJcbn1cclxuXHJcbmxldCB0b2RvID0gVG9kb0ZhY3RvcnkoJ015VG9kbycsJ3NkZmdzZGcnLCcxMS8xMi8xMicsJ3RvcCcpO1xyXG5sZXQgdG9kbzIgPSBUb2RvRmFjdG9yeSgnTXlUb2RvMicsJ3NkZmdzZGcnLCcxMS8xMi8xMicsJ3RvcCcpO1xyXG5sZXQgdG9kbzMgPSBUb2RvRmFjdG9yeSgnTXlUb2RvMycsJ3NkZmdzZGcnLCcxMS8xMi8xMicsJ3RvcCcpO1xyXG5jb25zb2xlLmxvZyh0b2RvKVxyXG5cclxubGV0IHByb2plY3QgPSBQcm9qZWN0RmFjdG9yeSgnTmV3UHJvaicpXHJcbiBwcm9qZWN0LmFkZFRvZG8odG9kbyk7XHJcbiBwcm9qZWN0LmFkZFRvZG8odG9kbzIpO1xyXG4gcHJvamVjdC5hZGRUb2RvKHRvZG8zKTtcclxuXHJcbiBwcm9qZWN0LmRlbGV0ZVRvZG8odG9kbzMpXHJcbiBjb25zb2xlLmxvZyhwcm9qZWN0KVxyXG5cclxuXHJcbiBleHBvcnQge1Byb2plY3RGYWN0b3J5LCBUb2RvRmFjdG9yeX0iLCJpbXBvcnQgeyBUb2RvRmFjdG9yeSwgUHJvamVjdEZhY3RvcnkgfSBmcm9tIFwiLi9mYWN0b3JpZXNcIjtcclxuaW1wb3J0IHsgZG9tTG9hZGVyIH0gZnJvbSBcIi4vVUlcIjtcclxuXHJcbi8vIGkgbmVlZCB0byB3aHJpdGUgbG9jYWwgc3RvcmFnZSBmdW5jdGlvbnMsIHBlZ2hhcHMgaW4gZGlmZmVyZW50IG1vZHVsZVxyXG4vLyBhZGQgZGF0ZS1mbnNcclxuLy8gY3JlYXRlIG9yIGZpbmQgdGhlIFVJOiBcclxuLy8gZXhwYW5kIHRoZSBmYWN0b3JpZXMgd2l0aCB0aGUgbG9jYWwgc3RvcmFnZSBmdW5jdGlvbnMoZGVsZXRlLGFkZCxnZXQpXHJcbi8vIGNyZWF0ZSBvbmxvYWQgZnVuY3Rpb24gd2l0aCBhbGwgZ2V0IGZyb20gbG9jYWwgc3RvcmFnZVxyXG4vLyBsZWFybiBob3cgdG8gZXhwYW5kIHRvZG8gdG8gc2VlL2VkaXQgaXRzIGRldGFpbHNcclxuLy8gdmlldyBhbGwgdG9kb3MgaW4gZWFjaCBwcm9qZWN0IChwcm9iYWJseSBqdXN0IHRoZSB0aXRsZSBhbmQgZHVlZGF0ZeKApiBwZXJoYXBzIGNoYW5naW5nIGNvbG9yIGZvciBkaWZmZXJlbnQgcHJpb3JpdGllcylcclxuXHJcbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCBmdW5jdGlvbiAoKSB7XHJcbiAgICBkb21Mb2FkZXIoKTtcclxuICAgfSk7XHJcbiAgIiwiaW1wb3J0IHsgVG9kb0ZhY3RvcnksIFByb2plY3RGYWN0b3J5IH0gZnJvbSBcIi4vZmFjdG9yaWVzXCI7XHJcblxyXG5jb25zdCBkb21Mb2FkZXIgPSAoKSA9PntcclxuICAgIGNvbnN0IG5hdmlnYXRpb24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbmF2aWdhdGlvbicpO1xyXG4gICAgY29uc3QgY29udGVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjb250ZW50Jyk7XHJcbiAgXHJcbiAgICAvLyBTYW1wbGUgZGF0YSBmb3IgbmF2aWdhdGlvbiBpdGVtcyBhbmQgY29ycmVzcG9uZGluZyBjb250ZW50XHJcbiAgICBjb25zdCBzZWN0aW9ucyA9IFtcclxuICAgICAgeyBpZDogJ3NlY3Rpb24xJywgdGl0bGU6ICdTZWN0aW9uIDEnLCBjb250ZW50OiAnQ29udGVudCBmb3IgU2VjdGlvbiAxJyB9LFxyXG4gICAgICB7IGlkOiAnc2VjdGlvbjInLCB0aXRsZTogJ1NlY3Rpb24gMicsIGNvbnRlbnQ6ICdDb250ZW50IGZvciBTZWN0aW9uIDInIH0sXHJcbiAgICAgIC8vIEFkZCBtb3JlIHNlY3Rpb25zIGFzIG5lZWRlZFxyXG4gICAgXTtcclxuXHJcbiAgICBmdW5jdGlvbiByZW5kZXJOYXZpZ2F0aW9uKCkge1xyXG4gICAgICBzZWN0aW9ucy5mb3JFYWNoKHNlY3Rpb24gPT4ge1xyXG4gICAgICAgIGNvbnN0IGl0ZW0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgICBpdGVtLnRleHRDb250ZW50ID0gc2VjdGlvbi50aXRsZTtcclxuICAgICAgICBpdGVtLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gc2hvd0NvbnRlbnQoc2VjdGlvbikpO1xyXG4gICAgICAgIG5hdmlnYXRpb24uYXBwZW5kQ2hpbGQoaXRlbSk7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIFxyXG4gICAgZnVuY3Rpb24gc2hvd0NvbnRlbnQoc2VjdGlvbikge1xyXG4gICAgICAvLyBIaWRlIHByZXZpb3VzIGNvbnRlbnRcclxuICAgICAgY29udGVudC5pbm5lckhUTUwgPSAnJztcclxuICAgICAgLy8gRGlzcGxheSBuZXcgY29udGVudFxyXG4gICAgICBjb25zdCBjb250ZW50RWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgICBjb250ZW50RWxlbWVudC50ZXh0Q29udGVudCA9IHNlY3Rpb24uY29udGVudDtcclxuICAgICAgY29udGVudC5hcHBlbmRDaGlsZChjb250ZW50RWxlbWVudCk7XHJcbiAgICB9XHJcbiAgXHJcbiAgICAvLyBJbml0aWFsIHJlbmRlclxyXG4gICAgcmVuZGVyTmF2aWdhdGlvbigpO1xyXG5cclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgc2VjdGlvbnMsXHJcbiAgICAgICAgcmVuZGVyTmF2aWdhdGlvbixcclxuICAgICAgICBzaG93Q29udGVudFxyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQge2RvbUxvYWRlcn0iXSwibmFtZXMiOlsiVG9kb0ZhY3RvcnkiLCJ0aXRsZSIsImRlc2NyaXB0aW9uIiwiZHVlRGF0ZSIsInByaW9yaXR5IiwidG9kbyIsInRvZG8yIiwidG9kbzMiLCJjb25zb2xlIiwibG9nIiwicHJvamVjdCIsInByb2plY3RUaXRsZSIsInRvZG9zIiwiYWRkVG9kbyIsInB1c2giLCJkZWxldGVUb2RvIiwidG9kb0luZGV4IiwiaW5kZXhPZiIsInNwbGljZSIsIlByb2plY3RGYWN0b3J5IiwiZG9jdW1lbnQiLCJhZGRFdmVudExpc3RlbmVyIiwibmF2aWdhdGlvbiIsImdldEVsZW1lbnRCeUlkIiwiY29udGVudCIsImlkIiwiZm9yRWFjaCIsInNlY3Rpb24iLCJpdGVtIiwiY3JlYXRlRWxlbWVudCIsInRleHRDb250ZW50IiwiaW5uZXJIVE1MIiwiY29udGVudEVsZW1lbnQiLCJhcHBlbmRDaGlsZCIsInNob3dDb250ZW50IiwiZG9tTG9hZGVyIl0sInNvdXJjZVJvb3QiOiIifQ==