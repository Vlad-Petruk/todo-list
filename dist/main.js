(()=>{"use strict";const e=(e,t,d,o,n)=>({title:e,description:t,dueDate:d,priority:o,complite:n});let t=e("MyTodo","sdfgsdg","11/12/12","top"),d=(e("MyTodo2","sdfgsdg","11/12/12","top"),e("MyTodo3","sdfgsdg","11/12/12","top"));console.log(t);let o=((e,t)=>{const d=[];return{id:"newProj",title:"NewProj",todos:d,addTodo:e=>{d.push(e)},deleteTodo:e=>{let t=d.indexOf(e);d.splice(t,1)}}})();console.log(o);let n=[{id:"all",title:"All Todos",todos:[]},{id:"today",title:"Today",todos:[]},{id:"week",title:"This week",todos:[]},{id:"important",title:"Important",todos:[]},{id:"completed",title:"Completed",todos:[]}];n.push(o);document.addEventListener("DOMContentLoaded",(function(){(()=>{const e=document.getElementById("navigation"),t=document.getElementById("content"),i=document.getElementById("modal"),c=document.getElementById("modal-content");function s(){e.innerHTML="",n.forEach((t=>{const d=document.createElement("div");d.classList.add("nav-element"),"completed"===t.id&&d.classList.add("project-separator"),d.textContent=t.title,d.addEventListener("click",(()=>l(t))),e.appendChild(d)}))}function l(e){t.innerHTML="";const d=document.createElement("div"),o=document.createElement("div");if(o.classList.add("section-title"),o.textContent=e.title,d.appendChild(o),0===e.todos.length){const e=document.createElement("p");e.textContent="No todos for this section.",d.appendChild(e)}else e.todos.forEach(((e,t)=>{const o=document.createElement("div");o.classList.add("todo");const n=document.createElement("input");n.type="checkbox",n.checked=e.complete,n.addEventListener("change",(()=>{e.complete=n.checked,n.checked?i.classList.add("crossed-out"):i.classList.remove("crossed-out")}));const i=document.createElement("div");i.textContent=e.title,i.addEventListener("click",(()=>a(e))),o.appendChild(n),o.appendChild(i),d.appendChild(o)}));t.appendChild(d)}function a(e,t){c.innerHTML=`\n      <p>Todo Details:</p>\n      <p>Title: ${e.title}</p>\n      <p>Descrption: ${e.description||"No details available"}</p>\n      <p>Due date: ${e.dueDate}<p>\n      <p>Priorty: ${e.priority}\n      `,i.style.display="block";const d=document.createElement("div");d.className="close",d.innerHTML="&times;",d.addEventListener("click",(()=>p())),c.appendChild(d);const o=document.createElement("button");o.textContent="Update",o.addEventListener("click",(()=>{p()})),c.appendChild(o)}function p(){i.style.display="none"}function r(e,t,d){t.addTodo(d),n.find((t=>t.id===e)).todos=t.todos,s(),l(n.find((t=>t.id===e)))}r("week",o,d),s()})()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,