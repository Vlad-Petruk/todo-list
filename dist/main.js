(()=>{"use strict";const e=(e,t,n,d,o)=>({title:e,description:t,dueDate:n,priority:d,complite:o});let t=e("MyTodo","sdfgsdg","11/12/12","top","false"),n=e("MyTodo2","sdfgsdg","11/12/12","top"),d=e("MyTodo3","sdfgsdg","11/12/12","top");console.log(t);let o=(e=>{const t=[];return{projectTitle:"NewProj",todos:t,addTodo:e=>{t.push(e)},deleteTodo:e=>{let n=t.indexOf(e);t.splice(n,1)}}})();o.addTodo(t),o.addTodo(n),o.addTodo(d),o.deleteTodo(d),console.log(o);document.addEventListener("DOMContentLoaded",(function(){(()=>{const e=document.getElementById("navigation"),d=document.getElementById("content"),o=document.getElementById("modal"),c=document.getElementById("modal-content");let i=[{id:"all",title:"All Todos",content:[]},{id:"today",title:"Today",content:[]},{id:"week",title:"This week",content:[]},{id:"important",title:"Important",content:[]},{id:"completed",title:"Completed",content:[]}];function l(e){d.innerHTML="";const t=document.createElement("div"),n=document.createElement("div");if(n.classList.add("section-title"),n.textContent=e.title,t.appendChild(n),0===e.content.length){const e=document.createElement("p");e.textContent="No todos for this section.",t.appendChild(e)}else e.content.forEach(((e,n)=>{const d=document.createElement("div");d.classList.add("todo");const i=document.createElement("input");i.type="checkbox",i.checked=e.complete,i.addEventListener("change",(()=>{e.complete=i.checked,i.checked?l.classList.add("crossed-out"):l.classList.remove("crossed-out")}));const l=document.createElement("div");l.textContent=e.title,l.addEventListener("click",(()=>function(e,t){c.innerHTML=`\n      <p>Todo Details:</p>\n      <p>Title: ${e.title}</p>\n      <p>Descrption: ${e.description||"No details available"}</p>\n      <p>Due date: ${e.dueDate}<p>\n      <p>Priorty: ${e.priority}\n      `,o.style.display="block";const n=document.createElement("div");n.className="close",n.innerHTML="&times;",n.addEventListener("click",(()=>s())),c.appendChild(n);const d=document.createElement("button");d.textContent="Update",d.addEventListener("click",(()=>{s()})),c.appendChild(d)}(e))),d.appendChild(i),d.appendChild(l),t.appendChild(d)}));d.appendChild(t)}function s(){o.style.display="none"}i.find((e=>"today"===e.id)).content=[t,n],i.forEach((t=>{const n=document.createElement("div");n.classList.add("nav-element"),n.textContent=t.title,n.addEventListener("click",(()=>l(t))),e.appendChild(n)})),l(i.find((e=>"today"===e.id)))})()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,